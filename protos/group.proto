syntax = "proto3";

option go_package = "./;protos";
package group;
import "user.proto";

message GroupMembers {
  string authorId = 1;
  string nickname = 2;
  message Permissions { bool receiveMessage = 1; }
  Permissions permissions = 3;
  int64 createTime = 4;
  int64 lastSeenTime = 5;
  string lastMessage = 8;
  int64 lastMessageTime = 7;
  // 仅获取列表的时候用
  user.SimpleSSOUserInfo userInfo = 6;
}

message Group {
  string id = 1;
  string authorId = 2;
  string name = 3;
  string avatar = 4;
  message Permissions {
    // 暂时弃用
    int64 maximumMembers = 1;
    bool allowMembersJoin = 2;
    bool allowMembersChat = 3;
    bool joinWithoutAuthentication = 4;

    message AdministratorList { string uid = 1; }
    // 暂时弃用
    repeated AdministratorList administratorList = 5;
  }
  Permissions permissions = 5;
  int64 members = 11;
  int64 status = 6;
  int64 createTime = 7;
  int64 lastUpdateTime = 12;
  string lastMessage = 10;
  int64 lastMessageTime = 8;
  // 登录了才有
  GroupMembers ownMemberInfo = 9;
}

message GroupMemberUpdateParams {
  // type Join / Leave
  string type = 1;
  string uid = 2;
}

message NewGroup {
  message Request {
    string name = 1;
    string avatar = 2;
    repeated GroupMemberUpdateParams members = 3;
  }
  message Response {
    // Added/Waiting
    string type = 1;
  }
}

message UpdateGroupInfo {
  message Request {
    string groupId = 1;
    string name = 2;
    string avatar = 3;
  }
  message Response {
    string groupId = 1;
    string name = 2;
    string avatar = 3;
  }
}

message GetAllJoinedGroups {
  message Request {}
  message Response {
    repeated Group list = 1;
    int64 total = 2;
  }
}

message GetGroupInfo {
  message Request { string groupId = 1; }
  message Response { Group group = 1; }
}

message GetGroupMembers {
  message Request { string groupId = 1; }
  message Response {
    repeated GroupMembers list = 1;
    int64 total = 2;
  }
}

message LeaveGroup {
  message Request {
    string groupId = 1;
    repeated string uid = 2;
  }
  message Response {}
}

message JoinGroup {
  message Request {
    string groupId = 1;
    repeated string uid = 2;
    string remark = 3;
  }
  message Response {
    // Added/Waiting
    string type = 1;
  }
}

message DisbandGroup {
  message Request { string groupId = 1; }
  message Response {}
}

// socket router
message UpdateGroupStatus {
  message Response {
    // type: New/Join/Disband/Leave
    string type = 1;
    string roomId = 2;
    repeated string uid = 3;
  }
}