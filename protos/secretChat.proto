syntax = "proto3";

option go_package = "./;protos";
package secretChat;
import "user.proto";

message InvitationCodeItem {
  string id = 1;
  int64 authorId = 2;
  message InvitationCodeAvailableRange {
    int64 count = 1;
    int64 startTime = 2;
    int64 endTime = 3;
    int64 maximumMembers = 4;
    bool e2ee = 5;
    string type = 6;
    bool allowMembersJoin = 7;
    bool allowMembersChat = 8;
    bool joinRequiresReview = 9;
    bool vhatRequiresReview = 10;
  }
  InvitationCodeAvailableRange availableRange = 3;
  string avatar = 4;
  string name = 5;
  message InvitationCodeUsage { int64 totalCallCount = 1; }
  InvitationCodeUsage usage = 6;
  int64 createTime = 7;
  int64 status = 8;
}

message GetInvitationCode {
  message Request { string invitationCode = 1; }
  message Response { InvitationCodeItem invitationCodeInfo = 1; }
}

message CreateInvitationCode {
  message Request {
    string name = 1;
    // 可选
    string avatar = 2;
    int64 count = 3;
    int64 startTime = 4;
    int64 endTime = 5;
    int64 maximumMembers = 6;
    string type = 7;
    bool e2ee = 8;
    bool allowMembersJoin = 9;
    bool allowMembersChat = 10;
  }
  message Response { string invitationCode = 1; }
}

message UpdateInvitationCode {
  message Request {
    string invitationCode = 9;
    string name = 1;
    // 可选
    string avatar = 2;
    int64 count = 3;
    int64 startTime = 4;
    int64 endTime = 5;
    int64 maximumMembers = 6;
    string type = 7;
    bool e2ee = 8;
    bool allowMembersJoin = 10;
    bool allowMembersChat = 11;
  }
  message Response { InvitationCodeItem invitationCodeInfo = 1; }
}

message CloseInvitationCode {
  message Request { string invitationCode = 1; }
  message Response { string invitationCode = 1; }
}

message RestartSecretChat {
  message Request { string invitationCode = 1; }
  message Response { InvitationCodeItem invitationCodeInfo = 5; }
}

// 匿名登录
message RegisterAnonymousUser {
  message Request {
    string avatar = 1;
    string nickname = 2;
    string invitationCode = 3;
  }
  message Response {
    string deviceId = 1;
    string token = 2;
    user.SSOUserInfo userInfo = 3;
  }
}

message SecretChatToken {
  // 校验三者信息是否一致性
  string secretChatToken = 1;
  string invitationCode = 2;
  string userToken = 3;
  string userDeviceId = 4;
}

// 获取SC的使用凭证
// 登录完就更新加入次数+1、加入UID+1、聊天UID+1（后面2个需要看条件）
message RegisterSecretChatToken {
  message Request { SecretChatToken token = 1; }
  message Response {
    // 此token要附带邀请码信息和用户ID信息和登录时间
    string token = 2;
    InvitationCodeItem invitationCodeInfo = 5;
  }
}

message JoinAnonymousRoom {
  message Request { SecretChatToken token = 1; }
  message Response {
    string roomId = 1;
    int64 totalNumberOfJoins = 2;
    InvitationCodeItem invitationCodeInfo = 5;
  }
}

message SendMessageWithAnonymousRoom {
  message Request {
    SecretChatToken token = 1;
    string apiName = 2;
    string data = 3;
  }
  message Response {
    int64 sendTimes = 1;
    int64 successTimes = 2;
  }
}

message OnAnonymousMessage {
  message Request {}
  message Response {
    string roomId = 1;
    string invitationCode = 2;
    int64 authorId = 3;
    string apiName = 4;
    string data = 5;
  }
}

// 暂未启用
message GetAnonymousRoomOnlineStatus {
  message Request { SecretChatToken token = 1; }
  message Response {}
}

message GetAnonymousRoomMembersStatus {
  message Request { SecretChatToken token = 1; }
  message Response {
    string roomId = 1;
    int64 totalUser = 2;
    repeated user.RoomUserInfo totalList = 3;
    int64 totalOnlineUser = 4;
    repeated user.RoomUserInfo onlineList = 5;
  }
}
